events {
    worker_connections 1024;
}
http {
    lua_shared_dict dogs 10m;
    server {
        listen 8080;
        ## location / {
        ##     local v = require "jit.v"
        ##     v.on("/tmp/jit.log")
        ##     lua_code_cache off;
        ##     # content_by_lua '
        ##     #     ngx.say("hello, world")
        ##     # ';
        ##     content_by_lua_file lua/hello.lua;
        ## }
	location /test {
            rewrite_by_lua_block {
                ngx.ctx.foo = 76
            }
            access_by_lua_block {
                ngx.ctx.foo = ngx.ctx.foo + 3
            }
            content_by_lua_block {
                ngx.say(ngx.ctx.foo)
            }
        }
        location /demo {
            content_by_lua_block {
                local dogs = ngx.shared.dogs
	       dogs:set("Jim", 8)
	       local v = dogs:get("Jim")
                ngx.say(v)
            }
        }
	location /ngx_ctx_host {
	     rewrite_by_lua_block {
		 ngx.ctx.host = ngx.var.host
	     }
	     access_by_lua_block {
		if (ngx.ctx.host == 'openresty.org') then
		    ngx.ctx.host = 'test.com'
		end
	     }
	     content_by_lua_block {
		 local cjson = require "cjson"
		 local t = {key = "value"}
		 ngx.say(ngx.ctx.host)
		 ngx.say(cjson.encode(t))
	     }
	}
    }
}
